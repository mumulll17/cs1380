{
    "extends": "google",
    "env": {
        "es6": true, // Enable ES6 syntax including new ES6 globals
        "node": true, // Adjust based on your environment
        "jest": true
    },
    "parserOptions": {
        "ecmaVersion": 2018, // Update ECMAScript version to at least 6 or later for arrow functions
        "sourceType": "script" // Set to "module" if you are using ES6 modules
    },
    "rules": {
        "max-len": "off",
        "no-undef": "error",
        "prefer-const": "error", // Do not enforce const over let
        "prefer-spread": "off", // Do not enforce spread operator
        "prefer-rest-params": "off", // Do not enforce rest parameters
        "prefer-template": "off", // Do not enforce template literals
        "object-shorthand": "off", // Do not enforce object method shorthand
        "require-jsdoc": "off", // Do not require JSDoc
        "guard-for-in": "off", // Do not require guard clauses in for...in loops
        "no-restricted-syntax": [
            "error",
            {
                "selector": "ClassDeclaration",
                "message": "Class declarations are not allowed."
            },
            {
                "selector": "ClassExpression",
                "message": "Class expressions are not allowed."
            },
            {
                "selector": "AwaitExpression",
                "message": "Using 'await' is not allowed."
            },
            {
                "selector": "FunctionDeclaration[async=true]",
                "message": "Async functions are not allowed."
            },
            {
                "selector": "FunctionExpression[async=true]",
                "message": "Async functions are not allowed."
            },
            {
                "selector": "ArrowFunctionExpression[async=true]",
                "message": "Async functions are not allowed."
            }
        ]
    }
}
